-- MySQL Script generated by MySQL Workbench
-- Thu 12 Dec 2019 02:31:35 PM AKST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Publisher`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `mydb`. `user` (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  username TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL
)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `mydb`. `post` (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  author_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  title TEXT NOT NULL,
  body TEXT NOT NULL,
  FOREIGN KEY (author_id) REFERENCES user (id)
)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `mydb`.`Publisher` (
  `Name` VARCHAR(45) NULL,
  `Organization` VARCHAR(45) NOT NULL,
  `Github` VARCHAR(45) NULL,
  `License` VARCHAR(45) NULL,
  `Website` VARCHAR(45) NOT NULL,
  `PublicationDate` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Website`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Language` (
  `Current_Version` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Current_Version`, `Name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Requirements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Requirements` (
  `Other_Libraries` VARCHAR(45) NULL,
  `Servers` VARCHAR(45) NULL,
  `Language_Current_Version` VARCHAR(45) NOT NULL,
  `Language_Name` VARCHAR(45) NOT NULL,
  INDEX `fk_Requirements_Language1_idx` (`Language_Current_Version` ASC, `Language_Name` ASC),
  PRIMARY KEY (`Language_Current_Version`, `Language_Name`),
  CONSTRAINT `fk_Requirements_Language1`
    FOREIGN KEY (`Language_Current_Version` , `Language_Name`)
    REFERENCES `mydb`.`Language` (`Current_Version` , `Name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Category` (
  `Category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Category`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SoftwarePackage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SoftwarePackage` (
  `idSoftwarePackage` INT NOT NULL AUTOINCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NULL,
  `Version` VARCHAR(45) NOT NULL,
  `OpenSource` VARCHAR(10) NOT NULL,
  `Publisher_Website` VARCHAR(45) NOT NULL,
  `Requirements_Language_Current_Version` VARCHAR(45) NOT NULL,
  `Requirements_Language_Name` VARCHAR(45) NOT NULL,
  `Category_Category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idSoftwarePackage`),
  INDEX `fk_SoftwarePackage_Publisher1_idx` (`Publisher_Website` ASC),
  INDEX `fk_SoftwarePackage_Requirements1_idx` (`Requirements_Language_Current_Version` ASC, `Requirements_Language_Name` ASC),
  INDEX `fk_SoftwarePackage_Category1_idx` (`Category_Category` ASC),
  CONSTRAINT `fk_SoftwarePackage_Publisher1`
    FOREIGN KEY (`Publisher_Website`)
    REFERENCES `mydb`.`Publisher` (`Website`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SoftwarePackage_Requirements1`
    FOREIGN KEY (`Requirements_Language_Current_Version` , `Requirements_Language_Name`)
    REFERENCES `mydb`.`Requirements` (`Language_Current_Version` , `Language_Name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SoftwarePackage_Category1`
    FOREIGN KEY (`Category_Category`)
    REFERENCES `mydb`.`Category` (`Category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Framework`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Framework` (
  `SoftwarePackage_idSoftwarePackage` INT NOT NULL,
  INDEX `fk_Framework_SoftwarePackage1_idx` (`SoftwarePackage_idSoftwarePackage` ASC),
  PRIMARY KEY (`SoftwarePackage_idSoftwarePackage`),
  CONSTRAINT `fk_Framework_SoftwarePackage1`
    FOREIGN KEY (`SoftwarePackage_idSoftwarePackage`)
    REFERENCES `mydb`.`SoftwarePackage` (`idSoftwarePackage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Module`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Module` (
  `Fuctionality` VARCHAR(45) NOT NULL,
  `SoftwarePackage_idSoftwarePackage` INT NOT NULL,
  PRIMARY KEY (`SoftwarePackage_idSoftwarePackage`),
  INDEX `fk_Module_SoftwarePackage1_idx` (`SoftwarePackage_idSoftwarePackage` ASC),
  CONSTRAINT `fk_Module_SoftwarePackage1`
    FOREIGN KEY (`SoftwarePackage_idSoftwarePackage`)
    REFERENCES `mydb`.`SoftwarePackage` (`idSoftwarePackage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Library`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Library` (
  `SoftwarePackage_idSoftwarePackage` INT NOT NULL,
  `Classes` VARCHAR(45) NULL,
  `Functions` VARCHAR(45) NULL,
  PRIMARY KEY (`SoftwarePackage_idSoftwarePackage`),
  INDEX `fk_Library_SoftwarePackage1_idx` (`SoftwarePackage_idSoftwarePackage` ASC),
  CONSTRAINT `fk_Library_SoftwarePackage1`
    FOREIGN KEY (`SoftwarePackage_idSoftwarePackage`)
    REFERENCES `mydb`.`SoftwarePackage` (`idSoftwarePackage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
